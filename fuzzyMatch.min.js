/*
 * fuzzyMatch.js v1.0.1
 * https://github.com/danielbonnell/fuzzyMatch
 * Copyright 2018 Daniel Bonnell
 *
 * Description: Compares two strings and returns a number between 0 and 1 representing their similarity
 * Demo: https://jsfiddle.net/dq1x7c3u/15/
 */
function fuzzyMatch(t,n,r){var e=0,o=t.split(/\W/).filter(function(t){return i(t)}).map(function(t){return t.toLowerCase()}),u=n.split(/\W/).filter(function(t){return i(t)}).map(function(t){return t.toLowerCase()});if(0===o.length||0===u.length)return 0;function i(t){var n="and be but by do for if in is it of or so that the this to too".split(" ");return"string"==typeof t&&t.length>1&&!n.includes(t)}function c(t){var n={};return t.forEach(function(t){n[t]=void 0===n[t]?1:n[t]+1}),n}if(o.forEach(function(t,n){if(n+1>u.length)return!1;for(var r=!1,i=[n],c=0;c<=2;c++){var f=n+c,a=n-c;!i.includes(a)&&a>0&&i.unshift(a),!i.includes(f)&&f<u.length&&i.push(f)}o[n]===u[n]?e++:i.forEach(function(t){r||o[t]!==u[t]||(e++,r=!0)})}),thisScore=Math.round(parseFloat(e)/u.length*100)/100,void 0===r)return fuzzyMatch(n,t,thisScore);var f,a,s,h,l,d,p=(f=c(o),a=c(u),s=Object.values(f).reduce(function(t,n){return t+n}),h=Object.values(a).reduce(function(t,n){return t+n}),l=0,d=0,Object.keys(f).forEach(function(t){a[t]===f[t]&&l++}),Object.keys(a).forEach(function(t){f[t]===a[t]&&d++}),[Math.round(parseFloat(l)/s*100)/100,Math.round(parseFloat(d)/h*100)/100].sort()[1]);return[r,thisScore,p].sort()[2]}
