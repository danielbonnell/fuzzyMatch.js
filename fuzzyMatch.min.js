/*
 * fuzzyMatch.js v1.0.0
 * https://github.com/danielbonnell/fuzzyMatch
 * Copyright 2018 Daniel Bonnell
 *
 * Description: Compares two strings and returns a number between 0 and 1 representing their similarity
 * Demo: https://jsfiddle.net/dq1x7c3u/15/
 */
function fuzzyMatch(t,r,n){var o=0,e=t.split(/\W/).filter(function(t){return i(t)}).map(function(t){return t.toLowerCase()}),u=r.split(/\W/).filter(function(t){return i(t)}).map(function(t){return t.toLowerCase()});function i(t){var r="and be but by do for if in is it of or so that the this to too".split(" ");return"string"==typeof t&&t.length>1&&!r.includes(t)}function c(t){var r={};return t.forEach(function(t){r[t]=void 0===r[t]?1:r[t]+1}),r}if(e.forEach(function(t,r){if(r+1>u.length)return!1;for(var n=!1,i=[r],c=0;c<=2;c++){var f=r+c,a=r-c;!i.includes(a)&&a>0&&i.unshift(a),!i.includes(f)&&f<u.length&&i.push(f)}e[r]===u[r]?o++:i.forEach(function(t){n||e[t]!==u[t]||(o++,n=!0)})}),thisScore=Math.round(parseFloat(o)/u.length*100)/100,void 0===n)return fuzzyMatch(r,t,thisScore);var f,a,s,h,l,d,p=(f=c(e),a=c(u),s=Object.values(f).reduce(function(t,r){return t+r}),h=Object.values(a).reduce(function(t,r){return t+r}),l=0,d=0,Object.keys(f).forEach(function(t){a[t]===f[t]&&l++}),Object.keys(a).forEach(function(t){f[t]===a[t]&&d++}),[Math.round(parseFloat(l)/s*100)/100,Math.round(parseFloat(d)/h*100)/100].sort()[1]);return[n,thisScore,p].sort()[2]}
